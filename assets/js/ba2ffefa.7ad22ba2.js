"use strict";(self.webpackChunkschool_learn=self.webpackChunkschool_learn||[]).push([[4508],{3944:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(7624),o=t(2172);const i={sidebar_position:10},l="Composants utilitaires",s={id:"android/course/compose/view-utility",title:"Composants utilitaires",description:"AlertDialog",source:"@site/docs/android/course/compose/view-utility.md",sourceDirName:"android/course/compose",slug:"/android/course/compose/view-utility",permalink:"/documentation/docs/android/course/compose/view-utility",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/android/course/compose/view-utility.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{sidebar_position:10},sidebar:"tutorialSidebar",previous:{title:"Associer des champs",permalink:"/documentation/docs/android/course/compose/m08-data-binding-class"},next:{title:"Stocker temporairement des donn\xe9es",permalink:"/documentation/docs/android/course/store-tmp-data"}},r={},c=[{value:"AlertDialog",id:"alertdialog",level:2},{value:"AlertDialog (avanc\xe9)",id:"alertdialog-avanc\xe9",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.M)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"composants-utilitaires",children:"Composants utilitaires"}),"\n",(0,a.jsx)(n.h2,{id:"alertdialog",children:"AlertDialog"}),"\n",(0,a.jsx)(n.p,{children:"Il y a \xe9norm\xe9ment de mani\xe8res d'afficher une popup. N\xe9anmoins, dans la m\xe9thode traditionnelle, voici ce qu'il faut retenir :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Placer le composant ",(0,a.jsx)(n.code,{children:"AlertDialog"})," dans une vue."]}),"\n",(0,a.jsx)(n.li,{children:"Conditionner son existence avec une structure conditionnelle dans le Composable."}),"\n",(0,a.jsxs)(n.li,{children:["En g\xe9n\xe9ral, la structure conditionnelle va utiliser des \xe9tats (par exemple, ",(0,a.jsx)(n.code,{children:"MutableStateFlow"}),") pour savoir s'il faut afficher l'",(0,a.jsx)(n.code,{children:"AlertDialog"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Exemple de code :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Composable\nfun Mypage() {\n    val showDialog = remember { mutableStateOf(false) }\n\n    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {\n\n        Button(onClick = { showDialog.value = true }) {\n            Text("Show Dialog")\n        }\n\n        if (showDialog.value) {\n            AlertDialog(\n                onDismissRequest = { showDialog.value = false },\n                confirmButton = {\n                    Button(onClick = { showDialog.value = false }) {\n                        Text("OK")\n                    }\n                },\n                title = { Text("Titre de la popup") },\n                text = { Text("Notre message") }\n            )\n        }\n    }\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"alertdialog-avanc\xe9",children:"AlertDialog (avanc\xe9)"}),"\n",(0,a.jsx)(n.p,{children:"Vous avez peut-\xeatre remarqu\xe9 que dans l'exemple pr\xe9c\xe9dent, nous avons d\xfb mettre en dur le titre et le texte de la popup. C'est emb\xeatant si nous avons plusieurs popups diff\xe9rentes sur la page."}),"\n",(0,a.jsx)(n.p,{children:"Pour contourner cela, nous pouvons cr\xe9er une classe personnalis\xe9e qui sert de structure pour stocker :"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"showDialog : indique si nous devons afficher la popup"}),"\n",(0,a.jsx)(n.li,{children:"title : le titre de la popup"}),"\n",(0,a.jsx)(n.li,{children:"message : le message dans la popup"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"La classe utilitaire :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'class MyAlertDialogData(var showDialog: Boolean = false, var title : String = "", var message : String = "")\n'})}),"\n",(0,a.jsx)(n.p,{children:"Modification de l'AlertDialog :"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:'@Composable\nfun Mypage(alertDialogData : MutableStateFlow<MyAlertDialogData>) {\n    val alertDialogDataState by alertDialogData.collectAsState();\n\n    Column(modifier = Modifier.fillMaxSize().padding(16.dp)) {\n\n        Button(onClick = { alertDialogDataState.value.showDialog = true }) {\n            Text("Show Dialog")\n        }\n\n        if (alertDialogDataState.showDialog) {\n            AlertDialog(\n                onDismissRequest = { alertDialogDataState.value.showDialog = false },\n                confirmButton = {\n                    Button(onClick = { alertDialogDataState.value.showDialog = false }) {\n                        Text("OK")\n                    }\n                },\n                title = { Text(alertDialogDataState.value.title) },\n                text = { Text(alertDialogDataState.value.message) }\n            )\n        }\n    }\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},2172:(e,n,t)=>{t.d(n,{I:()=>s,M:()=>l});var a=t(1504);const o={},i=a.createContext(o);function l(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);