"use strict";(self.webpackChunkschool_learn=self.webpackChunkschool_learn||[]).push([[512],{7908:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=a(7624),s=a(2172);const t={sidebar_position:2},i="Cours Java - H\xe9ritage en Programmation Orient\xe9e Objet (POO)",o={id:"java/course/m01-poo-heritage",title:"Cours Java - H\xe9ritage en Programmation Orient\xe9e Objet (POO)",description:"Introduction",source:"@site/docs/java/course/m01-poo-heritage.md",sourceDirName:"java/course",slug:"/java/course/m01-poo-heritage",permalink:"/documentation/docs/java/course/m01-poo-heritage",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/java/course/m01-poo-heritage.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Cours Java - Cr\xe9ation d'Objets, Instanciation, Constructeurs et Signature de M\xe9thodes",permalink:"/documentation/docs/java/course/m01-poo"},next:{title:"Cours Java - Polymorphisme en Programmation Orient\xe9e Objet (POO)",permalink:"/documentation/docs/java/course/m01-poo-polymorphisme"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Exemple : Jeu Vid\xe9o - H\xe9ritage de Personnages",id:"exemple--jeu-vid\xe9o---h\xe9ritage-de-personnages",level:2},{value:"1. Cr\xe9ation de la Classe Parente <code>Character</code>",id:"1-cr\xe9ation-de-la-classe-parente-character",level:3},{value:"2. Cr\xe9ation de Sous-Classes Sp\xe9cialis\xe9es",id:"2-cr\xe9ation-de-sous-classes-sp\xe9cialis\xe9es",level:3},{value:"<code>Warrior</code> (Guerrier)",id:"warrior-guerrier",level:4},{value:"<code>Mage</code> (Magicien)",id:"mage-magicien",level:4},{value:"3. Programme Principal <code>Game</code>",id:"3-programme-principal-game",level:3},{value:"Concepts Importants",id:"concepts-importants",level:2},{value:"R\xe9sum\xe9",id:"r\xe9sum\xe9",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.M)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"cours-java---h\xe9ritage-en-programmation-orient\xe9e-objet-poo",children:"Cours Java - H\xe9ritage en Programmation Orient\xe9e Objet (POO)"}),"\n",(0,r.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsxs)(n.p,{children:["L'",(0,r.jsx)(n.strong,{children:"h\xe9ritage"})," est un concept fondamental de la POO qui permet \xe0 une classe de ",(0,r.jsx)(n.strong,{children:"r\xe9utiliser"})," et ",(0,r.jsx)(n.strong,{children:"\xe9tendre"})," les fonctionnalit\xe9s d'une autre classe."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["La classe h\xe9rit\xe9e est appel\xe9e ",(0,r.jsx)(n.strong,{children:"classe parente"})," ou ",(0,r.jsx)(n.strong,{children:"superclasse"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["La classe qui h\xe9rite est appel\xe9e ",(0,r.jsx)(n.strong,{children:"classe enfant"})," ou ",(0,r.jsx)(n.strong,{children:"sous-classe"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"exemple--jeu-vid\xe9o---h\xe9ritage-de-personnages",children:"Exemple : Jeu Vid\xe9o - H\xe9ritage de Personnages"}),"\n",(0,r.jsxs)(n.h3,{id:"1-cr\xe9ation-de-la-classe-parente-character",children:["1. Cr\xe9ation de la Classe Parente ",(0,r.jsx)(n.code,{children:"Character"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Classe parente repr\xe9sentant un personnage g\xe9n\xe9ral\npublic class Character {\n    protected String name;\n    protected int health;\n\n    public Character(String name, int health) {\n        this.name = name;\n        this.health = health;\n    }\n\n    public void takeDamage(int damage) {\n        health -= damage;\n        System.out.println(name + " a subi " + damage + " points de d\xe9g\xe2ts. Vie restante: " + health);\n    }\n\n    public void displayStatus() {\n        System.out.println(name + " | Vie: " + health);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"2-cr\xe9ation-de-sous-classes-sp\xe9cialis\xe9es",children:"2. Cr\xe9ation de Sous-Classes Sp\xe9cialis\xe9es"}),"\n",(0,r.jsxs)(n.h4,{id:"warrior-guerrier",children:[(0,r.jsx)(n.code,{children:"Warrior"})," (Guerrier)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'// Sous-classe h\xe9ritant de Character\npublic class Warrior extends Character {\n    private int strength;\n\n    public Warrior(String name, int health, int strength) {\n        super(name, health); // Appelle le constructeur de la classe parente\n        this.strength = strength;\n    }\n\n    public void attack(Character target) {\n        System.out.println(name + " attaque " + target.name + " avec une force de " + strength);\n        target.takeDamage(strength);\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.h4,{id:"mage-magicien",children:[(0,r.jsx)(n.code,{children:"Mage"})," (Magicien)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class Mage extends Character {\n    private int mana;\n\n    public Mage(String name, int health, int mana) {\n        super(name, health);\n        this.mana = mana;\n    }\n\n    public void castSpell(Character target) {\n        if (mana >= 10) {\n            System.out.println(name + " lance un sort sur " + target.name);\n            target.takeDamage(15);\n            mana -= 10;\n        } else {\n            System.out.println(name + " n\'a pas assez de mana pour lancer un sort!");\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.h3,{id:"3-programme-principal-game",children:["3. Programme Principal ",(0,r.jsx)(n.code,{children:"Game"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'public class Game {\n    public static void main(String[] args) {\n        Warrior warrior = new Warrior("Arthas", 100, 20);\n        Mage mage = new Mage("Jaina", 80, 30);\n\n        warrior.displayStatus();\n        mage.displayStatus();\n\n        System.out.println("--- D\xe9but du Combat ---");\n\n        warrior.attack(mage);\n        mage.castSpell(warrior);\n\n        warrior.displayStatus();\n        mage.displayStatus();\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"concepts-importants",children:"Concepts Importants"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Mot-cl\xe9 ",(0,r.jsx)(n.code,{children:"extends"})]})," : Utilis\xe9 pour d\xe9clarer une sous-classe."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Constructeur de la Superclasse"})," : Utilisez ",(0,r.jsx)(n.code,{children:"super()"})," pour appeler le constructeur de la classe parente."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Attributs et M\xe9thodes H\xe9rit\xe9es"})," : Les sous-classes h\xe9ritent des attributs et m\xe9thodes publiques ou prot\xe9g\xe9es."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Red\xe9finition des M\xe9thodes"})," : Les sous-classes peuvent red\xe9finir des m\xe9thodes de la classe parente."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"r\xe9sum\xe9",children:"R\xe9sum\xe9"}),"\n",(0,r.jsxs)(n.p,{children:["L'h\xe9ritage permet de ",(0,r.jsx)(n.strong,{children:"r\xe9utiliser le code existant"})," et de cr\xe9er une ",(0,r.jsx)(n.strong,{children:"hi\xe9rarchie logique"})," entre les classes. Utilisez-le pour structurer vos projets tout en gardant un code lisible et maintenable."]})]})}function u(e={}){const{wrapper:n}={...(0,s.M)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},2172:(e,n,a)=>{a.d(n,{I:()=>o,M:()=>i});var r=a(1504);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);